"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = require("express");
const UserController_1 = require("../controllers/UserController");
const validation_1 = require("../middleware/validation");
const auth_1 = require("../middleware/auth");
const router = (0, express_1.Router)();
router.get("/", auth_1.authenticateToken, UserController_1.userController.getAllUsers.bind(UserController_1.userController));
router.get("/:id", auth_1.authenticateToken, UserController_1.userController.getUserById.bind(UserController_1.userController));
router.get("/email/:email", auth_1.authenticateToken, UserController_1.userController.getUserByEmail.bind(UserController_1.userController));
router.post("/", validation_1.validateUserCreate, UserController_1.userController.createUser.bind(UserController_1.userController));
router.put("/:id", auth_1.authenticateToken, validation_1.validateUserUpdate, UserController_1.userController.updateUser.bind(UserController_1.userController));
router.post("/login", UserController_1.userController.login.bind(UserController_1.userController));
router.delete("/:id", auth_1.authenticateToken, UserController_1.userController.deleteUser.bind(UserController_1.userController));
router.post('/request-password-reset', UserController_1.userController.requestPasswordReset.bind(UserController_1.userController));
router.post('/reset-password-with-code', UserController_1.userController.resetPasswordWithCode.bind(UserController_1.userController));
exports.default = router;
